- name: Setup Proxmox
  hosts: proxmox
  remote_user: root
  gather_facts: False
  vars:
    alpineTemplate: alpine-3.18-default_20230607_amd64.tar.xz
    debianTemplate: debian-12-standard_12.2-1_amd64.tar.zst

  tasks:
    # TODO: setup nfs mountpoints on proxmox machine: /mnt/pve/share

    - name: Download Alpine template
      community.general.proxmox_template:
        node: pve
        api_user: root@pam
        api_password: "{{api_password}}"
        api_host: pve
        storage: local
        content_type: vztmpl
        template: "{{alpineTemplate}}"

    - name: Download Debian template
      community.general.proxmox_template:
        node: pve
        api_user: root@pam
        api_password: "{{api_password}}"
        api_host: pve
        storage: local
        content_type: vztmpl
        template: "{{debianTemplate}}"

    - name: Create LXC container
      community.general.proxmox:
        vmid: "{{item.id}}"
        node: pve
        api_user: root@pam
        api_password: "{{api_password}}"
        api_host: pve
        password: "{{container_password}}"
        hostname: "{{item.name}}"
        ostemplate: 'local:vztmpl/{{debianTemplate if item.debian else alpineTemplate}}'
        netif: '{"net0":"name=eth0,gw=192.168.1.1,ip=192.168.1.{{item.id}}/24,bridge=vmbr0"}'
        disk: "{{item.storage}}"
        mounts: '{"mp0":"/mnt/pve/share,mp=/mnt/share","mp1":"/lxc_storage,mp=/mnt/lxc_storage"}'
        state: present
        cores: "{{item.cores}}"
        memory: "{{item.memory}}"
        swap: "{{item.swap}}"
        onboot: yes
        unprivileged: false
        storage: vmstorage1
        features:
          - "{{'nesting=0' if item.debian else 'nesting=1'}}"
      loop: "{{containers}}"

    - name: Start LXC container
      community.general.proxmox:
        vmid: "{{item.id}}"
        node: pve
        api_user: root@pam
        api_password: "{{api_password}}"
        api_host: pve
        state: started
      loop: "{{containers}}"

    - name: Fix resolv.conf
      changed_when: false
      ansible.builtin.shell:
        cmd: echo "echo 'nameserver 8.8.8.8' > /etc/resolv.conf" | pct enter {{item.id}}
      loop: "{{containers}}"

    - name: Prevent overwrite of resolv.conf
      changed_when: false
      ansible.builtin.shell:
        cmd: echo "touch /etc/.pve-ignore.resolv.conf" | pct enter {{item.id}}
      loop: "{{containers}}"

    - name: Install SSH
      changed_when: false
      when: not item.debian
      shell: echo "apk add openssh" | pct enter {{item.id}}
      loop: "{{containers}}"

    - name: Permit root login
      changed_when: false
      shell: echo "grep -qxF 'PermitRootLogin yes' /etc/ssh/sshd_config || echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config" | pct enter {{item.id}}
      loop: "{{containers}}"

    - name: Enable SSH
      changed_when: false
      when: not item.debian
      shell: echo "rc-update add sshd && service sshd start" | pct enter {{item.id}}
      loop: "{{containers}}"

    - name: Install python
      changed_when: false
      when: not item.debian
      shell: echo "apk add python3" | pct enter {{item.id}}
      loop: "{{containers}}"

    - name: Permit tunnel for tailscale part 1
      become: yes
      lineinfile:
        path: /etc/pve/lxc/{{item.id}}.conf
        regexp: '^lxc.cgroup2.devices.allow'
        line: 'lxc.cgroup2.devices.allow: c 10:200 rwm'
      loop: "{{containers}}"

    - name: Permit tunnel for tailscale part 2
      become: yes
      lineinfile:
        path: /etc/pve/lxc/{{item.id}}.conf
        regexp: '^lxc.mount.entry'
        line: 'lxc.mount.entry: /dev/net/tun dev/net/tun none bind,create=file'
      loop: "{{containers}}"
      notify: Restart LXC container

    - name: Changes for privileged containers part 1
      become: yes
      lineinfile:
        path: /etc/pve/lxc/{{item.id}}.conf
        regexp: '^lxc.apparmor.profile'
        line: 'lxc.apparmor.profile: unconfined'
      loop: "{{containers}}"
      notify: Restart LXC container

    - name: Changes for privileged containers part 2
      become: yes
      lineinfile:
        path: /etc/pve/lxc/{{item.id}}.conf
        regexp: '^lxc.cgroup.devices.allow'
        line: 'lxc.cgroup.devices.allow: a'
      loop: "{{containers}}"
      register: lxc_conf_update
      notify: Restart LXC container

    - name: Changes for privileged containers part 3
      become: yes
      lineinfile:
        path: /etc/pve/lxc/{{item.id}}.conf
        regexp: '^lxc.cap.drop'
        line: 'lxc.cap.drop:'
      loop: "{{containers}}"
      # Unknown bug causes this to always count as changed
      changed_when: false
      # register: lxc_conf_update
      # notify: Restart LXC container

  handlers:
    - name: Restart LXC container
      community.general.proxmox:
        vmid: "{{item.item.id}}"
        node: pve
        api_user: root@pam
        api_password: "{{api_password}}"
        api_host: pve
        state: restarted
      notify: Wait for container to wake up
      loop: "{{lxc_conf_update.results}}"

    - name: Wait for container to wake up
      ansible.builtin.wait_for:
        timeout: 10
      delegate_to: localhost
