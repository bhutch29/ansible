  hosts: localhost
  connection: local
  vars:
    packages:
      - fwupd
      - udisks2
      - ansible
      - networkmanager
      - networkmanager-openconnect
      - network-manager-applet
      - xorg-server
      - xorg-xinit
      - mesa
      - ttf-jetbrains-mono
      - ttf-jetbrains-mono-nerd
      - ttf-nerd-fonts-symbols
      - ttf-nerd-fonts-symbols-mono
      - zip
      - unzip
      - git
      - openssh
      - nfs-utils
      - nftables
      - firefox
      - unclutter
      - man-db
      - stow
      - flameshot
      - dunst
      - fish
      - ripgrep
      - go
      - go-tools
      - rustup
      - rust-analyzer
      - typescript
      - dotnet-runtime
      - dotnet-sdk
      - rsync
      - rofi
      - zathura
      - zathura-pdf-mupdf
      - chromium
      - bat
      - conky
      - feh
      - exfat-utils
      - fzf
      - nodejs
      - openconnect
      - pulsemixer
      - sxiv
      - tldr
      - trayer
      - earlyoom
      - gnome-keyring
      - autorandr
      - pandoc
      - reflector
      - python-pip
      - nmap
      - ncdu
      - docker
      - tree
      - xclip
      - ccache
      - neovim
      - jedi-language-server
      - typescript-language-server
      - lua-language-server
      - fd
      - eza
      - git-delta
      - tailscale
      - obsidian
      - deno
      - vifm
      - just
      - xorg-xsetroot
      - wezterm
      - bottom
      - dmenu
      - dnsutils
      - jless
      - libnotify
      - websocat
      - netcat
    aur_packages:
      - slack-desktop
      - networkmanager-dmenu-git
      - rofi-dmenu

  tasks:
    # - name: Check if AMD or Intel
    #   command: grep -q AMD /proc/cpuinfo
    #   ignore_errors: true
    #   changed_when: false
    #   register: is_amd
    #
    # - name: install AMD-specific packages
    #   when: is_amd
    #   community.general.pacman:
    #     state: present
    #     name:
    #       - xf86-video-amdgpu

    - name: Install general packages
      become: yes
      community.general.pacman:
        state: present
        name: "{{ packages }}"
            
    # - name: Laptop-specific tasks
    #   tags: ['always', 'laptop']
    #   become: yes
    #   block:
    #     - name: install laptop-specific packages
    #       community.general.pacman:
    #         state: present
    #         name:
    #           - tlp
    #           - acpilight
    #
    #     - name: Enable laptop-specific systemd units
    #       systemd:
    #         enabled: yes
    #         state: started
    #         name: "{{ item }}"
    #       loop:
    #         - tlp
    #
    #     - name: Copy touchpad X11 conf file
    #       copy:
    #         src: "{{ playbook_dir }}/files/30-touchpad.conf"
    #         dest: /etc/X11/xorg.conf.d/30-touchpad.conf

    # - name: Copy amdgpu X11 conf file
    #   become: yes
    #   when: is_amd
    #   copy:
    #     src: "{{ playbook_dir }}/files/20-amdgpu.conf"
    #     dest: /etc/X11/xorg.conf.d/20-amdgpu.conf

    - name: Enable systemd units
      become: yes
      systemd:
        enabled: yes
        state: started
        name: "{{ item }}"
      loop:
        - NetworkManager
        - systemd-timesyncd
        - nftables
        - earlyoom
        - sshd
        - reflector.timer
        - docker
        - fstrim
        - tailscaled

    - name: Configure reflector
      become: yes
      lineinfile:
        path: /etc/xdg/reflector/reflector.conf
        regexp: '^# --country'
        line: --country US

    - name: Create user
      become: yes
      user:
        name: bhutch
        state: present
        shell: /usr/bin/fish
        append: true # Append groups instead of replacing
        groups: 
          - docker
          - wheel

    - name: Configure makepkg processor count
      become: yes
      lineinfile:
        path: /etc/makepkg.conf
        regexp: '^#MAKEFLAGS='
        line: MAKEFLAGS="-j{{ ansible_facts['processor_vcpus']}}"

    - name: Enable colored pacman output
      become: yes
      lineinfile:
        path: /etc/pacman.conf
        regexp: '^#Color'
        line: Color

    - name: Enable parallel pacman downloads
      become: yes
      lineinfile:
        path: /etc/pacman.conf
        regexp: '^#ParallelDownloads'
        line: ParallelDownloads = 5

    - name: Create projects directory
      file:
        path: ~/projects
        state: directory

    - name: Gather Git Repos
      set_fact:
        git_repos:
          - {dest: ~/scripts, repo: git@github.com:bhutch29/scripts.git}
          - {dest: ~/dotfiles, repo: git@github.com:bhutch29/dotfiles.git}
          - {dest: ~/obsidian, repo: git@github.com:bhutch29/obsidian.git}
          - {dest: ~/projects/dwm, repo: git@github.com:bhutch29/dwm.git}
          - {dest: ~/projects/yay, repo: https://aur.archlinux.org/yay-bin.git}

    - name: Clone git repositories
      include_tasks: git_clone_idempotent.yml
      loop: "{{ git_repos }}"

    - name: Install yay
      command:
        chdir: ~/projects/yay
        cmd: makepkg -si
        creates: /usr/bin/yay

    - name: Install AUR packages
      command:
        cmd: yay -Qk {{ item }} || yay --noconfirm -S {{ item }}
      register: yay
      changed_when: "'error: package' in yay.stderr"
      loop: "{{ aur_packages }}"

    - name: Install dwm
      become: yes
      command:
        chdir: ~/projects/dwm
        cmd: make install
        creates: /usr/local/bin/dwm

    - name: Run Gnu Stow
      command:
        chdir: ~/dotfiles
        cmd: stow {{ item }}     
        creates: ~/.conkyrc
      loop:
        - misc

