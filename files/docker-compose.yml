version: '3.7'
services:
  ts-homeassistant:
    image: tailscale/tailscale:latest
    container_name: ts-homeassistant
    hostname: homeassistant
    ports:
      - "8123:8123"
    environment:
      - TS_AUTHKEY={{tailscale_authkey_homeassistant}}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_SERVE_CONFIG=/config/tailscale-serve-homeassistant.json
    volumes:
      - /root/ts-homeassistant/state:/var/lib/tailscale
      - /root/ts-homeassistant/config:/config
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped

  homeassistant:
    container_name: homeassistant
    network_mode: service:ts-homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - /root/home-assistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    depends_on:
      - ts-homeassistant
  
  # nextcloud:
  #   container_name: nextcloud
  #   restart: always
  #   image: linuxserver/nextcloud
  #   volumes:
  #     - ${USERDIR}/nextcloud:/config
  #     - /mnt/files:/data
  #     - ${USERDIR}/certs:/certs
  #   links:
  #     - nextcloud-db
  #   ports:
  #     - "443:443"
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #
  # nextcloud-db:
  #   container_name: nextcloud-db
  #   image: mariadb
  #   restart: always
  #   volumes:
  #     - ${USERDIR}/nextcloud-db:/var/lib/mysql
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=Brzbat29
  #     - MYSQL_PASSWORD=Brzbat29
  #     - MYSQL_DATABASE=nextcloud
  #     - MYSQL_USER=nextcloud
  #
  # organizr:
  #   container_name: organizr
  #   restart: always
  #   image: lsiocommunity/organizr
  #   volumes:
  #     - ${USERDIR}/organizr:/config
  #     - ${USERDIR}/certs:/certs
  #   ports:
  #     - "8006:80"
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #

  # historian:
  #   container_name: historian
  #   restart: always
  #   image: denoland/deno:debian
  #   # TODO: ports
  #   volumes:
  #     - /root:/app
  #   command: run --allow-all --unstable-kv --unstable-cron /app/historian.ts

  # watchtower:
  #   container_name: watchtower
  #   restart: always
  #   image: v2tec/watchtower
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command: --schedule "0 0 4 * * *" --cleanup
